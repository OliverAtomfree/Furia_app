"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-v92d7f@miexof%-(cu!zkpu9z@^25_ce=cy85#j__o2&zarrcs'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False
#DEBUG = True


WEB_CONCURRENCY: 1
ALLOWED_HOSTS = ['127.0.0.1', 'localhost', '192.168.1.103', 'testserver', 'furia-app.onrender.com']
#ALLOWED_HOSTS = ['tudominio.com', 'www.tudominio.com', 'tu_ip_del_servidor']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth', 
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'jugadores'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'jugadores', 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # Permitir uso de MEDIA_URL en plantillas mediante el context processor
                'django.template.context_processors.media',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'es'

TIME_ZONE = 'America/Caracas'

USE_I18N = True

USE_TZ = True

# Rutas para los ficheros de traducción (.po/.mo)
LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'locale'),
]


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Configuración para archivos estáticos y multimedia
# La configuración estaba duplicada y en conflicto. Se ha consolidado en este bloque.

# URL para servir archivos estáticos (CSS, JS, etc.)
STATIC_URL = 'static/'
# Directorios adicionales donde Django buscará archivos estáticos
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'jugadores/static'),
]
# Ruta del sistema de archivos donde se recopilarán los archivos estáticos con collectstatic
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
# URL para servir archivos multimedia (subidos por los usuarios)
MEDIA_URL = '/media/'
# Ruta del sistema de archivos donde se almacenarán los archivos multimedia
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

LOGIN_URL = '/iniciar_sesion/'

# Clave API para remove.bg (no la incluyas en el repositorio)
# Se lee desde la variable de entorno REMOVE_BG_API_KEY.
# En desarrollo, puedes exportarla en PowerShell:
#   $env:REMOVE_BG_API_KEY = 'tu_api_key_aqui'
# En producción, configúrala en el entorno del servidor.
REMOVE_BG_API_KEY = os.environ.get('REMOVE_BG_API_KEY', '')
